<?php

/**
 * @file
 * Contains butils.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_help().
 */
function butils_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {

    // Main module help for the butils module.
    case 'help.page.butils':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Backend utilities for Drupal 8') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function butils_node_insert(EntityInterface $entity) {
  return butils_handle_node_save($entity);
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function butils_node_update(EntityInterface $entity) {
  return butils_handle_node_save($entity);
}

/**
 * Node save hook handler.
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 *   Node entity.
 *
 * @return \Drupal\Core\Entity\EntityInterface
 *   Node entity.
 */
function butils_handle_node_save(EntityInterface $entity) {
  \Drupal::moduleHandler()->invokeAll('node_save', [$entity]);
  return $entity;
}


/**
 * Gets the current page main entity.
 *
 * @return \Drupal\Core\Entity\EntityInterface
 *   Current page main entity.
 */
function butils_page_entity() {
  $page_entity = &drupal_static(__FUNCTION__, NULL);
  if (!empty($page_entity)) {
    return $page_entity;
  }
  $types = array_keys(\Drupal::entityTypeManager()->getDefinitions());
  $route = \Drupal::routeMatch();
  $page_entity = NULL;
  $params = $route->getParameters()->all();
  foreach ($types as $type) {
    if (!empty($params[$type])) {
      if (is_string($params[$type])) {
        $page_entity = \Drupal::entityTypeManager()->getStorage($type)->load($params[$type]);
      }
      else {
        $page_entity = $params[$type];
      }

      if ($page_entity instanceof EntityInterface) {
        return $page_entity;
      }
    }
  }

  return NULL;
}
